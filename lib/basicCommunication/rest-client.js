// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, utils;

  Promise = require('bluebird');

  utils = require('../utils');

  module.exports = function(basicClient, datacenterId) {
    var service;
    service = {};
    service.getDatacenter = Promise.coroutine(function*() {
      var route;
      route = "datacenters/" + datacenterId + "?depth=5";
      return (yield basicClient.get(route));
    });
    service.listLans = Promise.coroutine(function*() {
      var route;
      route = "datacenters/" + datacenterId + "/lans?depth=5";
      return (yield basicClient.getCollection(route));
    });
    service.createLan = Promise.coroutine(function*(data) {
      var route;
      route = "datacenters/" + datacenterId + "/lans?depth=5";
      return (yield basicClient.post(route, data));
    });
    service.updateLan = Promise.coroutine(function*(data, lanId) {
      var route;
      route = "datacenters/" + datacenterId + "/lans/" + lanId + "?depth=5";
      return (yield basicClient.patch(route, data));
    });
    service.listServers = Promise.coroutine(function*() {
      var route;
      route = "datacenters/" + datacenterId + "/servers?depth=5";
      return (yield basicClient.getCollection(route));
    });
    service.getServer = Promise.coroutine(function*(serverId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId + "?depth=5";
      return (yield basicClient.get(route));
    });
    service.createServer = Promise.coroutine(function*(data) {
      var route;
      route = "datacenters/" + datacenterId + "/servers?depth=5";
      return (yield basicClient.post(route, data));
    });
    service.deleteServer = Promise.coroutine(function*(serverId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId;
      return (yield basicClient["delete"](route));
    });
    service.patchServer = Promise.coroutine(function*(serverId, data) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId;
      return (yield basicClient.patch(route, data));
    });
    service.startServer = Promise.coroutine(function*(serverId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId + "/start";
      return (yield basicClient.post(route));
    });
    service.stopServer = Promise.coroutine(function*(serverId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId + "/stop";
      return (yield basicClient.post(route));
    });
    service.rebootServer = Promise.coroutine(function*(serverId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId + "/reboot";
      return (yield basicClient.post(route));
    });
    service.listVolumes = Promise.coroutine(function*() {
      var route;
      route = "datacenters/" + datacenterId + "/volumes?depth=1";
      return (yield basicClient.getCollection(route));
    });
    service.createVolume = Promise.coroutine(function*(data) {
      var route;
      route = "datacenters/" + datacenterId + "/volumes";
      return (yield basicClient.post(route, data));
    });
    service.deleteVolume = Promise.coroutine(function*(volumeId) {
      var route;
      route = "datacenters/" + datacenterId + "/volumes/" + volumeId;
      return (yield basicClient["delete"](route));
    });
    service.attachVolume = Promise.coroutine(function*(serverId, volumeId) {
      var route;
      route = "datacenters/" + datacenterId + "/servers/" + serverId + "/volumes";
      return (yield basicClient.post(route, {
        id: volumeId
      }));
    });
    service.waitTillOpenTasksHaveFinished = Promise.coroutine(function*() {
      return (yield basicClient.waitTillOpenTasksHaveFinished());
    });
    return service;
  };

}).call(this);
